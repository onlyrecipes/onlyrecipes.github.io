<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steven | Steven DiFalco</title>
    <link>/author/steven/</link>
      <atom:link href="/author/steven/index.xml" rel="self" type="application/rss+xml" />
    <description>Steven</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Steven DiFalco</copyright><lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hub4e451f8373da2880beada631b18c0fe_51688_512x512_fill_lanczos_center_2.png</url>
      <title>Steven</title>
      <link>/author/steven/</link>
    </image>
    
    <item>
      <title>NYC Urban Ranger Animal Response</title>
      <link>/post/nyc-urban-ranger-animal-response/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/nyc-urban-ranger-animal-response/</guid>
      <description>


&lt;div id=&#34;i-came-across-this-dataset-from-nyc-from-urban-park-ranger-animal-condition-response-source-httpsdata.cityofnewyork.usenvironmenturban-park-ranger-animal-condition-responsefuhs-xmg2.-from-may-2018---june-2019-data-was-collected-on-animal-calls-received-by-the-urban-park-rangers-of-new-york-city.-most-of-these-reports-would-be-associated-with-city-parks-for-animals-in-distress.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;I came across this dataset from NYC from Urban Park Ranger Animal Condition Response [source] (&lt;a href=&#34;https://data.cityofnewyork.us/Environment/Urban-Park-Ranger-Animal-Condition-Response/fuhs-xmg2&#34; class=&#34;uri&#34;&gt;https://data.cityofnewyork.us/Environment/Urban-Park-Ranger-Animal-Condition-Response/fuhs-xmg2&lt;/a&gt;). From May 2018 - June 2019, data was collected on animal calls received by the Urban Park Rangers of New York City. Most of these reports would be associated with city parks for animals in distress.&lt;/h4&gt;
&lt;div id=&#34;lets-take-a-look-at-the-data-and-see-what-types-of-animals-have-appeared-in-nyc&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Let’s take a look at the data and see what types of animals have appeared in NYC!&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_raw &amp;lt;- read.csv(&amp;quot;Urban_Park_Ranger_Animal_Condition_Response.csv&amp;quot;)

#Animal by species
head(data_raw %&amp;gt;% count(Species.Description, sort =T))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Species.Description   n
## 1             Raccoon 497
## 2             raccoon  64
## 3        Canada Goose  37
## 4             Chicken  26
## 5     Red-tailed Hawk  25
## 6             Opossum  17&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Animal by classification
head(data_raw %&amp;gt;% count(Animal.Class, sort =T))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                       Animal.Class   n
## 1                Small Mammals-RVS 582
## 2                            Birds 166
## 3                         Domestic  57
## 4                          Raptors  54
## 5            Small Mammals-non RVS  49
## 6 Terrestrial Reptile or Amphibian  21&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;clearly-a-lot-of-calls-for-raccoons-unfortunately-this-dataset-does-not-include-the-reason-for-the-call-besides-healthy-unhealthy-dead-on-arrival-doa.-there-is-some-cleaning-needed-when-looking-at-the-classifications.-looking-at-marine-reptiles-shows-theyre-actually-terrestrial-reptiles.-lets-do-some-cleaning.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Clearly, a lot of calls for raccoons! Unfortunately, this dataset does not include the reason for the call besides &lt;code&gt;healthy, unhealthy, dead on arrival (DOA)&lt;/code&gt;. There is some cleaning needed when looking at the classifications. Looking at &lt;code&gt;$Marine Reptiles&lt;/code&gt; shows they’re actually &lt;code&gt;$Terrestrial Reptiles&lt;/code&gt;. Let’s do some cleaning.&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_clean &amp;lt;- data_raw %&amp;gt;%
  mutate(
    Species.Description = str_to_lower(Species.Description), #removes capitializations
    Species.Description = str_replace_all(Species.Description, &amp;quot;-&amp;quot;, &amp;quot; &amp;quot;), #removes dashes
    Animal.Class = str_to_lower(Animal.Class),
    Animal.Class = case_when(
      str_detect(Animal.Class, &amp;quot;marine reptiles&amp;quot;) ~ &amp;quot;terrestrial reptile or amphibian&amp;quot;, #moving turtles to correct category
      str_detect(Animal.Class, &amp;quot;marine mammals&amp;quot;) ~ &amp;quot;marine mammals&amp;quot;,
      str_detect(Animal.Class, &amp;quot;domestic&amp;quot;) ~ &amp;quot;domestic&amp;quot;,
      str_detect(Animal.Class, &amp;quot;raptors&amp;quot;) ~ &amp;quot;raptors&amp;quot;,
      str_detect(Animal.Class, &amp;quot;fish&amp;quot;) ~ &amp;quot;fish&amp;quot;,
      TRUE ~ Animal.Class),
    Species.Description = case_when(
      str_detect(Species.Description, &amp;quot;squirrel&amp;quot;) ~ &amp;quot;squirrel&amp;quot;, #more examples of this but this was most obvious
      TRUE ~ Species.Description
    )
  )

write.csv(data_clean, &amp;quot;UrbanRangerDataClean.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;overall-this-is-much-better-now-and-solved-some-issues.-i-consolidated-the-animal.class-category-to-make-further-analysis-easier-but-recognize-this-may-have-over-simplified-some-details.-there-are-some-cases-when-some-species-are-labelled-different-ways.-well-leave-this-for-now.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Overall, this is much better now and solved some issues. I consolidated the &lt;code&gt;Animal.Class&lt;/code&gt; category to make further analysis easier, but recognize this may have over simplified some details. There are some cases when some species are labelled different ways. We’ll leave this for now.&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Grouping by species for top 20 most abundant species
species &amp;lt;- data_clean %&amp;gt;%
  count(Species.Description, sort = TRUE) %&amp;gt;%
  top_n(20) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Selecting by n&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Species count
plot &amp;lt;- ggplot(data = species, aes(x= reorder(Species.Description, n), y = n)) + #reorder makes bars descending order
  geom_bar(stat = &amp;quot;identity&amp;quot;) + #allows for the count to be plotted
  coord_flip() + #rotates graph
  labs(title= &amp;quot;Top 20 Species Count&amp;quot;, y= &amp;quot;Count&amp;quot;,x =&amp;quot;Species&amp;quot;) + 
  theme_minimal() #introduces a theme to the figure instead of the standard output

plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-09-nyc-urban-ranger-animal-response/index.en_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;funny-to-see-that-chickens-are-the-fourth-most-reported-animal-in-this-dataset&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Funny to see that chickens are the fourth most reported animal in this dataset!&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&#34;with-such-a-high-abundance-of-calls-for-raccoons-im-going-to-remove-them-from-the-next-graphic.-this-way-we-can-understand-how-the-rest-of-the-species-distributions-look.-looking-at-how-the-animal.class-reported-across-the-boroughs.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;With such a high abundance of calls for raccoons, I’m going to remove them from the next graphic. This way we can understand how the rest of the species distributions look. Looking at how the &lt;code&gt;Animal.Class&lt;/code&gt; reported across the boroughs.&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot2 &amp;lt;- data_clean %&amp;gt;%
  filter(Species.Description != &amp;quot;raccoon&amp;quot;) %&amp;gt;%
  group_by(Borough) %&amp;gt;%
  count(Animal.Class, sort = TRUE)%&amp;gt;%
  ggplot(aes(x= reorder(Animal.Class, n), y = n)) + #reorder makes bars descending order, n represents count
  geom_bar(aes(fill=Borough), stat = &amp;quot;identity&amp;quot;) + #allows for the count to be plotted
  scale_fill_brewer(palette = &amp;quot;Greens&amp;quot;) +
  theme_classic()+ #introduces a theme to the figure instead of the standard output
  facet_wrap(~Borough, nrow=1)+
  labs(title = &amp;quot;Reports by Animal Classification, without raccoons&amp;quot;, y= &amp;quot;Number of individuals reported&amp;quot;, x=NULL)+
  coord_flip()

plot2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-09-nyc-urban-ranger-animal-response/index.en_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;now-that-we-know-that-there-are-differences-across-the-boroughs-lets-take-a-look-at-the-most-popular-places-animals-are-reported.-not-surprising-this-dataset-falls-within-the-nyc-parks-most-often.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Now that we know that there are differences across the boroughs, let’s take a look at the most popular places animals are reported. Not surprising, this dataset falls within the NYC Parks most often.&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot3 &amp;lt;- data_clean %&amp;gt;% 
  count(Property, Borough, sort = TRUE) %&amp;gt;%
  top_n(10, n) %&amp;gt;%
  ggplot(aes(x=reorder(Property, -n), y=n)) +
  geom_bar(aes(fill = Borough), stat = &amp;quot;identity&amp;quot;)+
  scale_fill_brewer(palette = &amp;quot;Greens&amp;quot;)+
  xlab(&amp;quot;&amp;quot;)+
  ylab(&amp;quot;Number of reported animals&amp;quot;)+
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) #rotates labels 45 degrees and adjust down to not overlap axis

plot3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-09-nyc-urban-ranger-animal-response/index.en_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Geocoding Points by Place Name using ArcGIS Online </title>
      <link>/post/geocoding-points-by-place-name-using-arcgis-online/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/geocoding-points-by-place-name-using-arcgis-online/</guid>
      <description>


&lt;div id=&#34;this-is-the-second-post-to-using-the-urban-ranger-response-call-from-nyc-open-data-first-posthttpswww.stevendifalco.compostnyc-urban-ranger-animal-response.-the-data-did-not-have-specific-location-information-such-as-xy-coordinates-but-there-was-a-field-property-in-the-database.-using-this-field-i-decided-to-try-out-geocoding-the-information-in-arcgis-online.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;This is the second post to using the Urban Ranger Response Call from NYC Open Data (first post)[&lt;a href=&#34;https://www.stevendifalco.com/post/nyc-urban-ranger-animal-response/&#34; class=&#34;uri&#34;&gt;https://www.stevendifalco.com/post/nyc-urban-ranger-animal-response/&lt;/a&gt;]. The data did not have specific location information, such as XY coordinates, but there was a field &lt;code&gt;Property&lt;/code&gt; in the database. Using this field, I decided to try out geocoding the information in ArcGIS Online.&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&#34;to-start-lets-read-in-the-data.-in-viewing-the-first-10-rows-i-already-see-we-might-have-some-cleaning-needed-for-this-column-also.-washingtom-vs-washington-square-park.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;To start, let’s read in the data. In viewing the first 10 rows, I already see we might have some cleaning needed for this column also. “WashingtoM” vs “WashingtoN” Square Park.&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Note, this first csv has been cleaned as part of the first post, so see that part to check what has been changed already from the original dataset. 

data_raw &amp;lt;- read.csv(&amp;quot;UrbanRangerDataClean.csv&amp;quot;)

#Calls by property
head(data_raw$Property, n=10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] Washingtom Square Park       Van Cortlandt Park          
##  [3] Irving Square Park           Parade Ground               
##  [5] Silver Lake Park             Washington Square Park      
##  [7] Tompkins Square Park         Tompkins Square Park        
##  [9] Flushing Meadows Corona Park Flushing Meadows Corona Park
## 194 Levels: 5 East 102nd St 851 Fairmont Pl Abingdon Square ... Wolfe&amp;#39;s Pond Park&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;i-decided-to-try-out-using-open-refinehttpsopenrefine.org-to-clean-up-the-data-instead-of-trying-to-use-r.-open-refine-simplifies-the-process-of-finding-text-that-are-close-to-one-another-and-allows-for-easy-cleaning.-follow-videos-on-their-webpage-to-get-the-data_raw.csv-file-uploaded-if-you-want-to-follow-along.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;I decided to try out using (Open Refine)[&lt;a href=&#34;https://openrefine.org/&#34; class=&#34;uri&#34;&gt;https://openrefine.org/&lt;/a&gt;] to clean up the data instead of trying to use R. Open Refine simplifies the process of finding text that are close to one another and allows for easy cleaning. Follow videos on their webpage to get the &lt;code&gt;data_raw.csv&lt;/code&gt; file uploaded if you want to follow along.&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&#34;using-the-facet-feature-on-the-property-column-we-can-group-together-like-text.-using-cluster-and-nearest-neighbor-function-we-get-the-pop-up-below.-i-went-through-different-types-of-clustering-to-merge-similar-properties-names-together.-i-also-did-the-step-above-for-species.description-and-animal.class-to-refine-these-columns.-last-step-add-a-column-for-state-and-put-new-york-for-all-entries--reason-will-be-clear-below.-export-this-csv-file.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Using the Facet feature on the Property Column, we can group together like text. Using Cluster and Nearest Neighbor function, we get the pop-up below. I went through different types of clustering to merge similar properties names together. I also did the step above for &lt;code&gt;species.description&lt;/code&gt; and &lt;code&gt;animal.class&lt;/code&gt; to refine these columns. &lt;em&gt;Last&lt;/em&gt; step, add a column for &lt;code&gt;State&lt;/code&gt; and put New York for all entries- reason will be clear below. Export this csv file.&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;OpenRefine.png&#34; title=&#34;photo&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;now-to-bring-this-over-to-arconline-to-geocode-but-one-final-step-is-needed-first-creating-a-layer-which-allows-arconline-to-query-location-names-for-geocoding.-i-followed-thishttpsdoc.arcgis.comenarcgis-onlinereferencegeocode.htm-tutorial-to-make-one-for-the-united-states.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Now to bring this over to ArcOnline to geocode! But one final step is needed first; creating a layer which allows ArcOnline to query location names for geocoding. I followed (this)[&lt;a href=&#34;https://doc.arcgis.com/en/arcgis-online/reference/geocode.htm&#34; class=&#34;uri&#34;&gt;https://doc.arcgis.com/en/arcgis-online/reference/geocode.htm&lt;/a&gt;] tutorial to make one for the United States.&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&#34;to-a-new-map-in-arcgis-online-add-the-cleaned-data-and-you-will-get-a-popup-that-looks-like-this&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;To a new map in ArcGIS Online, add the cleaned data and you will get a popup that looks like this:&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;CSV.png&#34; title=&#34;photo&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;change-location-field-to-state-state-and-property-location-or-place.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Change “Location Field” to State= State and Property = Location or Place.&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;csv2.png&#34; title=&#34;photo&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;without-adding-the-state-column-originally-the-dataset-put-points-across-the-us-such-as-this-group-in-manhattan-kansas.-just-adding-the-additional-information-focused-the-points-to-be-mapped-at-least-in-ny-state-with-the-majority-in-the-correct-nyc-area.&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Without adding the state column, originally the dataset put points across the US, such as this &lt;em&gt;group&lt;/em&gt; in Manhattan, Kansas. Just adding the additional information focused the points to be mapped at least in NY state, with the majority in the correct NYC area.&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;ManhattanKansas.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;here-is-the-current-online-map-to-explore.-orange-in-this-map-indicate-points-with-the-state-field-vs-those-without-state-field.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Here is the current online map to explore. Orange in this map indicate points with the state field, vs those without state field.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;NYC_Calls.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Walkability</title>
      <link>/post/2020-06-09/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-06-09/</guid>
      <description>


&lt;div id=&#34;as-part-of-the-tidytuesday-these-figures-display-different-levels-of-bike-and-walk-commutes-based-on-american-community-survey-data.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;As part of the &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-11-05&#34;&gt;TidyTuesday&lt;/a&gt;, these figures display different levels of Bike and Walk Commutes based on American Community Survey data.&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;after-some-cleaning-of-the-data-we-can-see-that-in-new-york-and-vermont-a-decent-percentage-of-communters-walk-to-work.-interesting-to-see-that-vermont-commuters-also-bike-to-work-more-frequently.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;After some cleaning of the data, we can see that in New York and Vermont a decent percentage of communters walk to work. Interesting to see that Vermont commuters also bike to work more frequently.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Modes of travling biking and walking ACS data
commute_mode &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-11-05/commute.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   city = col_character(),
##   state = col_character(),
##   city_size = col_character(),
##   mode = col_character(),
##   n = col_double(),
##   percent = col_double(),
##   moe = col_double(),
##   state_abb = col_character(),
##   state_region = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;commute_mode$state &amp;lt;- recode(commute_mode$state, 
                       &amp;quot;Ca&amp;quot;= &amp;quot;California&amp;quot;,
                       &amp;quot;Massachusett&amp;quot; = &amp;quot;Massachusetts&amp;quot;)


#summarise data each state for percent biking and walking
commute_summary &amp;lt;- commute_mode %&amp;gt;%
  mutate(state = tolower(state)) %&amp;gt;%
  group_by(state, mode) %&amp;gt;%
  summarise(Percent = mean(percent))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` regrouping output by &amp;#39;state&amp;#39; (override with `.groups` argument)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#retrieve state geo data
states_map &amp;lt;- map_data(&amp;quot;state&amp;quot;)

#filter by Northeastern States
NE_states &amp;lt;- subset(states_map, region %in% c(&amp;quot;connecticut&amp;quot;, &amp;quot;massachusetts&amp;quot;,&amp;quot;maine&amp;quot;, &amp;quot;new hampshire&amp;quot;, 
                                          &amp;quot;new york&amp;quot;, &amp;quot;rhode island&amp;quot;, &amp;quot;vermont&amp;quot;))
#plot by new england states
commute_summary %&amp;gt;%
  ggplot(aes(map_id = state)) +
  geom_map(aes(fill=Percent), map = NE_states)+ #sets up map
  facet_wrap(vars(mode)) + #displays both bike and walk on same figure
  expand_limits(x= NE_states$long, y=NE_states$lat)+ #sets limits based on lat/long of states file
  coord_map(&amp;quot;polyconic&amp;quot;) +
  scale_fill_viridis(option = &amp;quot;D&amp;quot;) +
  theme_void()+ #gets rid of xy grid
  labs(fill = &amp;quot;Percent of commuters&amp;quot;, title= &amp;quot;The Northeast Loves Walking&amp;quot;)+
  theme(legend.position=&amp;quot;bottom&amp;quot;, plot.title = element_text(hjust =0.5), 
        strip.text.x = element_text(size = 12))#changes text of mode&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-09/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;commute_summary&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 102 x 3
## # Groups:   state [51]
##    state      mode  Percent
##    &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt;
##  1 alabama    Bike    0.235
##  2 alabama    Walk    1.33 
##  3 alaska     Bike    1.43 
##  4 alaska     Walk    5.03 
##  5 arizona    Bike    0.724
##  6 arizona    Walk    2.10 
##  7 arkansas   Bike    0.155
##  8 arkansas   Walk    2.05 
##  9 california Bike    0.983
## 10 california Walk    2.36 
## # … with 92 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;in-contrast-to-northeast-southeast-commuters-do-not-seem-to-prefer-biking-or-walking-to-work.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;In contrast to Northeast, Southeast commuters do not seem to prefer biking or walking to work.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#filter by southeastern states
SE_states &amp;lt;- subset(states_map, region %in% c(&amp;quot;alabama&amp;quot;, &amp;quot;florida&amp;quot;, &amp;quot;georgia&amp;quot;, &amp;quot;kentucky&amp;quot;, &amp;quot;mississippi&amp;quot;, 
                                              &amp;quot;north carolina&amp;quot;, &amp;quot;south carolina&amp;quot;, &amp;quot;tennessee&amp;quot;, &amp;quot;virginia&amp;quot;))

commute_summary %&amp;gt;%
  ggplot(aes(map_id = state)) +
  geom_map(aes(fill=Percent), map = SE_states)+
  facet_wrap(vars(mode)) +
  expand_limits(x= SE_states$long, y=SE_states$lat)+
  coord_map(&amp;quot;polyconic&amp;quot;) +
  scale_fill_viridis(option = &amp;quot;D&amp;quot;) +
  theme_void()+
  labs(fill = &amp;quot;Percent of commuters&amp;quot;, title= &amp;quot;The Southeast Hates Walking&amp;quot;)+
  theme(legend.position=&amp;quot;bottom&amp;quot;, plot.title = element_text(hjust =0.5), 
        strip.text.x = element_text(size = 12))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-09/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;to-simplifiy-the-color-scheme-i-gropued-the-percentage-of-walking.-it-is-surprising-to-see-that-west-virginia-seems-to-be-a-big-walking-to-work-state.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To simplifiy the color scheme, I gropued the percentage of walking. It is surprising to see that West Virginia seems to be a big walking-to-work state.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#group dataset by % groups
commute_summary$Group[commute_summary$Percent &amp;lt;= 2] = &amp;quot;1&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Unknown or uninitialised column: `Group`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;commute_summary$Group[commute_summary$Percent &amp;gt;= 2 &amp;amp; commute_summary$Percent &amp;lt;= 3] = &amp;quot;2&amp;quot;
commute_summary$Group[commute_summary$Percent &amp;gt;= 3 &amp;amp; commute_summary$Percent &amp;lt;= 4] = &amp;quot;3&amp;quot;
commute_summary$Group[commute_summary$Percent &amp;gt;= 4 &amp;amp; commute_summary$Percent &amp;lt;= 5] = &amp;quot;4&amp;quot;
commute_summary$Group[commute_summary$Percent &amp;gt;= 5 &amp;amp; commute_summary$Percent &amp;lt;= 6] = &amp;quot;5&amp;quot;
commute_summary$Group[commute_summary$Percent &amp;gt;= 6] = &amp;quot;6&amp;quot;

#change group category to Numeric so map can be colored with group #
commute_summary$Group &amp;lt;- as.numeric(commute_summary$Group)

#seperate &amp;#39;mode&amp;#39; into bike and walk
commute_Walk &amp;lt;- dplyr::filter(commute_summary, mode == &amp;quot;Walk&amp;quot;)

#Map of groups for % walking
commute_Walk %&amp;gt;%
  ggplot(aes(map_id = state)) +
  geom_map(aes(fill=Group), color=&amp;quot;black&amp;quot;, map = states_map)+
  expand_limits(x= states_map$long, y=states_map$lat)+
  coord_map(&amp;quot;polyconic&amp;quot;) +
  scale_fill_viridis(option = &amp;quot;D&amp;quot;) +
  theme_void()+
  labs(fill = &amp;quot;Percent of commuters&amp;quot;, title= &amp;quot;Walking to Work by State&amp;quot;)+
  theme(legend.position=&amp;quot;bottom&amp;quot;, plot.title = element_text(hjust =0.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-09/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
